openapi: 3.0.0
info:
  title: プロジェクト管理 - 週次レポートAPI
  description: 週次レポートAPI
  version: '1.0'
  contact:
    name: yuta-katayama-23
    email: yuta-katayama-23@example.com
servers:
  - url: 'http://localhost:3000'
    description: local development
tags:
  - name: Weekly-Report API
paths:
  /api/v1/weekly-report/answer:
    post:
      summary: 週次レポート回答API
      operationId: post-api-v1-weekly_report-answer
      description: |
        週次レポートへ回答します。  
        プロジェクトのプロジェクトマネージャーのみが回答できます。
      tags:
        - Weekly-Report API
      security:
        - Bearer: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                project_id:
                  type: integer
                  maxLength: 64
                  minLength: 1
                  format: int32
                  example: 1
                  minimum: 1
                  description: プロジェクトID
                report_question_id:
                  type: integer
                  format: int32
                  minimum: 1
                  example: 1
                  description: 回答しようとしているレポート質問ID
                due_on:
                  type: string
                  format: date
                  description: レポートの回答期限日
                report_answers:
                  type: array
                  minItems: 1
                  items:
                    type: object
                    minProperties: 1
                    additionalProperties: false
                    properties:
                      id:
                        type: integer
                        format: int32
                        example: 1
                        minimum: 1
                        description: レポート質問の設問ID
                      answer:
                        oneOf:
                          - type: string
                            description: テキストの回答
                            example: コメント
                          - type: integer
                            description: 選択肢の番号
                            format: int32
                            example: 1
                    required:
                      - id
                      - answer
              required:
                - project_id
                - report_question_id
                - due_on
                - report_answers
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  weekly_report_id: {}
                  due_on: {}
                  answered_on: {}
                  status: {}
                  project_id: {}
                  project_name: {}
                  division_id: {}
                  division_name: {}
                allOf:
                  - $ref: '#/components/schemas/project_base'
                  - properties:
                      weekly_report_id:
                        type: integer
                        format: int32
                        example: 1
                        minimum: 1
                        description: 週次レポートID
                      due_on:
                        type: string
                        format: date
                        description: レポートの回答期限日
                      answered_on:
                        type: string
                        format: date
                        description: レポートの回答期限日
                      status:
                        type: string
                        enum:
                          - SUBMITTED
                          - CONFIRMED
                          - EDITED
                          - RECONFIRMED
                        description: レポートの回答期限日
                required:
                  - weekly_report_id
                  - due_on
                  - answered_on
                  - status
                  - project_id
                  - project_name
                  - division_id
                  - division_name
        '400':
          $ref: '#/components/responses/error'
        '401':
          $ref: '#/components/responses/error'
        '403':
          $ref: '#/components/responses/error'
        '404':
          $ref: '#/components/responses/error'
        '409':
          $ref: '#/components/responses/error'
        '415':
          $ref: '#/components/responses/error'
        '500':
          $ref: '#/components/responses/error'
components:
  schemas:
    project_base:
      title: project_base
      type: object
      properties:
        project_id:
          type: integer
          format: int32
          minimum: 1
          example: 1
          description: プロジェクトID
        project_name:
          type: string
          description: プロジェクト名
        division_id:
          type: integer
          format: int32
          minimum: 1
          example: 1
          description: 部署ID
        division_name:
          type: string
          description: 部署名
          example: ○○部 △△グループ
  securitySchemes:
    Bearer:
      type: http
      scheme: bearer
      description: ログイン時に取得されるトークン
  responses:
    error:
      description: ''
      content:
        application/json:
          schema:
            $ref: ./error.v1.yaml#/components/schemas/error
